version: 2.1

commands:

  ##############################################################################
  # Generic reusable commands                                                  #
  ##############################################################################

  "pip-install":
    parameters:
      "packages":
        type: string
    steps:
      - run: sudo pip install << parameters.packages >>

  "install-node":
    parameters:
      "version":
        type: string
        default: "10"
    steps:
      - run:
          name: "Install Node << parameters.version >>"
          command: |
            echo 'export NVM_DIR=/opt/circleci/.nvm' >> ${BASH_ENV}
            echo 'source $NVM_DIR/nvm.sh' >> ${BASH_ENV}

            export NVM_DIR=/opt/circleci/.nvm
            source $NVM_DIR/nvm.sh
            if ! nvm ls << parameters.version >> > /dev/null; then nvm install << parameters.version >>; fi
            nvm alias default << parameters.version >>

  "install-go":
    parameters:
      "version":
        type: string
        default: "1.13"
    steps:
      - run:
          name: "Install Go << parameters.version >>"
          command: |
            set -x
            if [[ $OS == Windows_NT ]]; then
              curl https://dl.google.com/go/go<< parameters.version >>.windows-amd64.zip -o /tmp/go.zip
              mv /c/go /c/go-112
              unzip -q /tmp/go.zip -d /c/
            else
              curl https://dl.google.com/go/go<< parameters.version >>.$(uname -s | tr A-Z a-z)-amd64.tar.gz -o /tmp/go.tar.gz
              tar -C /tmp -xzf /tmp/go.tar.gz
              echo 'export PATH=/tmp/go/bin:$PATH' >> "$BASH_ENV"
              if [ -z "$(/tmp/go/bin/go env GOPROXY)" ]; then
                echo 'export GOPROXY=https://proxy.golang.org' >> "$BASH_ENV"
              fi
              . "$BASH_ENV"
            fi
            go version

  "install-kubectl":
    parameters:
      "version":
        type: string
        default: "1.14.0"
    steps:
      - run:
          name: "Install kubectl << parameters.version >>"
          command: |
            curl -L --fail -o /tmp/kubectl https://storage.googleapis.com/kubernetes-release/release/v<< parameters.version >>/bin/$(uname -s | tr A-Z a-z)/amd64/kubectl
            sudo install /tmp/kubectl /usr/local/bin/kubectl

  "install-python":
    parameters:
      "version":
        type: string
        default: "3.6.3"
      "executor-key":
        type: string
    steps:
      - restore_cache:
          name: "Restore Python install cache"
          key: "pyenv-<< parameters.executor-key >>-<< parameters.version >>"
      - run:
          name: "Install Python << parameters.version >>"
          command: |
            pyenv versions
            pyenv install --skip-existing << parameters.version >>
            pyenv global 2.7.12 << parameters.version >>
            pyenv versions
      - save_cache:
          name: "Save Python install cache"
          key: "pyenv-<< parameters.executor-key >>-<< parameters.version >>"
          paths:
            - "/opt/circleci/.pyenv"

  ##############################################################################
  # Ambassador-specific granular commands                                      #
  ##############################################################################

  "oss-checkout":
    steps:
      - checkout:
          # In AES we patch this to be `path: ~/project`
          path: ~/project/ambassador

  "dirty-check":
    steps:
      - run:
          name: "Dirty check"
          command: |
            # On Windows, `git status` doesn't record no-op
            # line-ending changes in to the index, so things show as
            # dirty even if they aren't.  Trying to `add` them does
            # trigger the appropriate index update.  So do a `git add`
            # *before* the `git status --porcelain` to work around
            # Windows being terrible; we'd otherwise put the `git add`
            # inside of the `if` block to help generate better output
            # for `git diff`.
            git add .
            if [[ -n "$(git status --porcelain)" ]]; then
               PAGER= git diff --cached
               exit 1
            fi
